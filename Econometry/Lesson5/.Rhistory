install.packages("plm")
library(plm)
?plm
data("Cigar")
class("Cigar")
class(Cigar)
Cigar$sales
sales <- split(Cigar$sales, Cigar$state) # продажи
View(sales)
sales <- data.frame(sales)
View(sales)
ts.plot(sales)
sales <- split(Cigar$sales, Cigar$state) # разбиваем для каждого штата цены
View(sales)
sales <- data.frame(sales)
View(sales)
ts.plot(sales, col=1:ncol(sales))
lines(rowMeans(sales), lwd=3)
lines(rowMeans(sales), lwd=5)
price <- split(Cigar$price, Cigar$state) # разбиваем для каждого штата продажи
price <- data.frame(price)
ts.plot(price, col=1:ncol(sales)) # курить стали меньше
lines(rowMeans(price), lwd=5)
ts.plot(price, col=1:ncol(sales), log="y") # логарифмируем цены
lines(rowMeans(price), lwd=5)
ts.plot(price, col=1:ncol(sales))
ts.plot(price, col=1:ncol(sales), log="y") # логарифмируем цены
lines(rowMeans(price), lwd=5)
cpi <- Cigar$cpi
cpi <- Cigar$cpi[Cigar$state == 1]
cpi <- Cigar$cpi[Cigar$state == 1] # cpi для всех штатов одинаков
ts.plot(price/cpi, col=1:ncol(sales), log="y")
lines(rowMeans(price/cpi), lwd=5)
# панельный фрейм для регрессии
dfp <- pdata.frame(Cigar, index=c(Cigar$state, Cigar$year))
# панельный фрейм для регрессии
dfp <- pdata.frame(Cigar, index=list(Cigar$state, Cigar$year))
# панельный фрейм для регрессии
dfp <- pdata.frame(Cigar, index=c(state, year))
View(Cigar)
# панельный фрейм для регрессии
dfp <- pdata.frame(Cigar, index=c("state", "year"))
class(dfp)
index(dfp)
header(index(dfp))
head(index(dfp))
within(dfp, { # чтобы $ не писать каждый раз
lsales <- log(sales)
lrprice <- log(price/cpi)
lp16 <- log(pop16/pop) # pop16 - кол-во старше 16 лет
lrincome <- log(ndi/cpi) # реальный доход
lrpimin <- log(pimin/cpi) # реальная минимальная цена по соседним штатам
})
View(dfp)
lsales <- log(sales)
within(dfp, { # чтобы $ не писать каждый раз
lsales <- log(sales)
lrprice <- log(price/cpi)
lp16 <- log(pop16/pop) # pop16 - кол-во старше 16 лет
lrincome <- log(ndi/cpi) # реальный доход
lrpimin <- log(pimin/cpi) # реальная минимальная цена по соседним штатам
})
dfp <- within(dfp, { # чтобы $ не писать каждый раз
lsales <- log(sales)
lrprice <- log(price/cpi)
lp16 <- log(pop16/pop) # pop16 - кол-во старше 16 лет
lrincome <- log(ndi/cpi) # реальный доход
lrpimin <- log(pimin/cpi) # реальная минимальная цена по соседним штатам
})
# создаем лаг продаж
dfp$lag.lsales <- plm::lag(dfp$lsales)
dfp$dlsales <- dfp$lsales - dfp$lag.lsales
# регрессия обычная
reg.pool.nt <- lm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin) # без времени
# регрессия обычная
reg.pool.nt <- lm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin, data=dfp) # без времени
summary(reg.pool.nt)
reg.pool.nt <- lm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin + year, data=dfp) # со временем.
summary(reg.pool.nt)
View(Cigar)
View(Cigar)
dfp <- na.omit()
dfp <- na.omit(dfp)
reg.pool.nt <- lm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin + year, data=dfp) # со временем.
summary(reg.pool.nt)
#
reg.fe <- lm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin + year + state, data=dfp) # со временем. year берет как качественную переменную
summary(reg.fe)
reg.pool.nt <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimi,
model="pooling", data=dfp)
reg.pool.nt <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimi, model="pooling", data=dfp)
reg.pool.nt <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin,
model="pooling", data=dfp)
summary(reg.pool.nt)
reg.pool.fe <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin,
model="within", effect="twowayes", data=dfp)
reg.pool.fe <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin,
model="within", effect="twoways", data=dfp)
summary(reg.pool.fe)
reg.fe <- plm(dlsales ~ lag.lsales + lrprice + lp16 + lrincome + lrpimin,
model="within", effect="twoways", data=dfp)
summary(reg.fe)
install.packages("modeldata")
# Задание новое
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# install.packages("modeldata")
library(modeldata)
data("lending_club")
View(lending_club)
df <- lending_club
rm(lending_club)
View(df)
summary(df)
str(df) # тип переменных
table(df$Class)
df$bad <- (df$Class == "bad") + 0
table(df$bad)
hist(df$funded_amnt)
hist(log(df$funded_amnt))
hist(df$funded_amnt) # гистограмма суммы, которую выдали
hist(log(df$funded_amnt))
levels(df$term)
df$term_num <- ifelse(df$term=="term_36", 36, 60)
table(df$term_num)
hist(df$int_rate# ставка процента
hist(df$int_rate) # ставка процента
hist(df$int_rate) # ставка процента
table(df$sub_grade)
table(df$sub_grade, df$Class)
prop.table(table(df$sub_grade, df$Class))
prop.table(table(df$sub_grade, df$Class), 4)
prop.table(table(df$sub_grade, df$Class))
